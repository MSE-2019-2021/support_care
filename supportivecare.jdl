application {
  config {
    applicationType monolith,
    baseName supportivecare,
    packageName uc.dei.mse.supportivecare,
    buildTool maven,
    clientPackageManager npm,
    databaseType sql,
    devDatabaseType h2Memory,
    prodDatabaseType postgresql,
    nativeLanguage pt-pt,
    languages [pt-pt, en]
    authenticationType jwt,
    cacheProvider caffeine,
    enableHibernateCache true,
    clientFramework angularX,
    jhiPrefix custom,
    withAdminUi false,
    testFrameworks [cypress]
  }
  entities *
}

/**
* Administração.
*/
entity Administration {
	/**
	* Tipo de administração.
	*/
	type String required maxlength(100)
}

/**
* Observação.
*/
entity Notice {
	/**
	* Descrição.
	*/
	description String required maxlength(1000),
	/**
	* Avaliação.
	*/
	evaluation String required maxlength(1000),
	/**
	* Intervenção interdependente.
	*/
	intervention String required maxlength(1000)
}

/**
* Substância Ativa (ou DCI: Denominação Comum Internacional).
*/
entity ActiveSubstance {
	/**
	* Nome.
	*/
	name String required maxlength(255),
	/**
	* Dosagem.
	*/
	dosage String required maxlength(30),
	/**
	* Forma Farmacêutica.
	*/
	form String required maxlength(255),
	/**
	* Descrição geral.
	*/
	description String maxlength(1000)
}

/**
* Tratamento.
*/
entity Treatment {
	/**
	* Tipo de tratamento.
	*/
	type String required maxlength(100)
}

/**
* Regime Terapêutico.
*/
entity TherapeuticRegime {
	/**
	* Nome.
	*/
	name String required maxlength(255),
	/**
	* Acrônimo.
	*/
	acronym String maxlength(50),
	/**
	* Propósito.
	*/
	purpose String required maxlength(1000),
	/**
	* Condições para administração.
	*/
	condition String required maxlength(1000),
	/**
	* Calendarização.
	*/
	timing String maxlength(255),
	/**
	* Indicação para prescrição.
	*/
    indication String required maxlength(1000),
	/**
	* Critérios de redução de dose.
	*/
    criteria String required maxlength(1000),
	/**
	* Outras informações.
	*/
    notice String maxlength(1000)
}

/**
* Documento.
*/
entity Document {
	/**
	* Título.
	*/
	title String required maxlength(255),
	/**
	* Tamanho.
	*/
    size Long required,
	/**
	* Tipo de ficheiro.
	*/
  	mimeType String maxlength(50)
}

/**
* Conteúdo.
*/
entity Content {
	/**
	* Dados.
	*/
  	data Blob required
}

/**
* PROM.
*/
entity Outcome {
	/**
	* Nome.
	*/
	name String required maxlength(255),
	/**
	* Descrição.
	*/
	description String maxlength(1000)
}

/**
* Grau de Toxicidade.
*/
entity ToxicityRate {
	/**
	* Nome.
	*/
	name String required maxlength(255),
	/**
	* Descrição.
	*/
	description String maxlength(1000),
	/**
	* Informação ao doente.
	*/
	notice String maxlength(1000),
	/**
	* Intervenção autónoma.
	*/
    autonomousIntervention String maxlength(1000),
	/**
	* Intervenção interdependente.
	*/
    interdependentIntervention String maxlength(1000),
	/**
	* Suporte para auto-gestão.
	*/
    selfManagement String maxlength(1000)
}

/**
* Sintoma (Efeito secundário).
*/
entity Symptom {
	/**
	* Nome.
	*/
	name String required maxlength(255),
	/**
	* Informação ao enfermeiro.
	*/
	notice String maxlength(1000)
}

/**
* Entity Feedback.
*/
enum EntityFeedback {
  DRUG (Drug),
  THERAPEUTIC_REGIME (TherapeuticRegime),
  OUTCOME (Outcome),
  SYMPTOM (Symptom)
}

/**
* Feedback.
*/
entity Feedback {
	/**
	* Nome da entidade.
	*/
	entityName EntityFeedback required,
	/**
	* Id da entidade.
	*/
	entityId Long required,
	/**
	* Polegar.
	*/
	thumb Boolean required,
	/**
	* Razão.
	*/
	reason String maxlength(1000),
	/**
	* Resolvido.
	*/
	solved Boolean required,
	/**
	* Anónimo.
	*/
	anonym Boolean required
}

relationship OneToOne {
  Document{content} to Content{document(id) required}
}

relationship OneToMany {
	Administration to ActiveSubstance{administration(type)},
    ActiveSubstance{notice(description)} to Notice{activeSubstance(name) required},
    Treatment to TherapeuticRegime{treatment(type) required},
    Outcome{document} to Document{outcome(name) required},
    Symptom{toxicityRate(name)} to ToxicityRate{symptom(name)}
}

relationship ManyToMany {
	TherapeuticRegime{activeSubstance(name)} to ActiveSubstance{therapeuticRegime(name)},
    Symptom{therapeuticRegime(name)} to TherapeuticRegime{symptom(name)},
    Symptom{outcome(name)} to Outcome{symptom(name)}
}

filter *

paginate * with infinite-scroll

dto * with mapstruct
